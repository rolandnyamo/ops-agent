AWSTemplateFormatVersion: '2010-09-09'
Description: CodePipeline for ops-agent â€” builds and deploys SAM stacks on GitHub push

Parameters:
  ProjectName:
    Type: String
    Default: ops-agent
  PipelineName:
    Type: String
    Default: ops-agent-pipeline
  GitHubOwner:
    Type: String
    Description: GitHub org/user
    Default: rolandnyamo
  GitHubRepo:
    Type: String
    Description: GitHub repository name
    Default: ops-agent
  GitBranch:
    Type: String
    Default: main
  ConnectionArn:
    Type: String
    Description: CodeStar Connections ARN to GitHub (activate in console)
    Default: arn:aws:codeconnections:us-east-1:326445141506:connection/be28e422-fb3e-4ddb-8784-c284517ea97e

Resources:
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${ProjectName}-artifacts-${AWS::AccountId}-${AWS::Region}"
      VersioningConfiguration: { Status: Enabled }

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: { Service: codebuild.amazonaws.com }
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
        - arn:aws:iam::aws:policy/AdministratorAccess-AWSElasticBeanstalk
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AWSCodePipeline_ReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
      Policies:
        - PolicyName: CodeBuildInline
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${ProjectName}-build"
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts: { Type: CODEPIPELINE }
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - { Name: DATA_STACK, Value: !Sub "${ProjectName}-data" }
          - { Name: APP_STACK, Value: !Sub "${ProjectName}-app" }
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              commands:
                - echo Using AWS CLI to deploy SAM templates
            build:
              commands:
                - set -e
                - echo Deploy data stack
                - aws cloudformation deploy --template-file sam/data.yaml --stack-name "$DATA_STACK" --capabilities CAPABILITY_NAMED_IAM CAPABILITY_IAM CAPABILITY_AUTO_EXPAND
                - echo Deploy app/resources stack
                - aws cloudformation deploy --template-file sam/resources.yaml --stack-name "$APP_STACK" --capabilities CAPABILITY_NAMED_IAM CAPABILITY_IAM CAPABILITY_AUTO_EXPAND
          artifacts:
            files:
              - '**/*'

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: { Service: codepipeline.amazonaws.com }
            Action: sts:AssumeRole
      Policies:
        - PolicyName: PipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - codebuild:*
                  - codestar-connections:UseConnection
                Resource: '*'

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref PipelineName
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              Configuration:
                ConnectionArn: !Ref ConnectionArn
                FullRepositoryId: !Sub "${GitHubOwner}/${GitHubRepo}"
                BranchName: !Ref GitBranch
                OutputArtifactFormat: CODE_ZIP
              OutputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
        - Name: BuildAndDeploy
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceOutput
              RunOrder: 1

Outputs:
  PipelineNameOut: { Value: !Ref Pipeline }
  ArtifactBucketOut: { Value: !Ref ArtifactBucket }

